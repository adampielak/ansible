---

- name: allow all access to port 8080
  become: true
  ufw:
    rule: allow
    port: 8080
    proto: tcp

- name: check if sabnzbd.ini file exists
  stat: path="/home/"{{ userlist[3].username }}/.sabnzbd/sabnzdb.ini
  register: sab

- name: create .sabnzdb folder
  remote_user: "{{ userlist[3].username }}"
  file:
    path: "/home/{{ userlist[3].username }}/.sabnzbd"
    state: directory
    mode: 0700

- name: create .sabnzdb/admin folder
  remote_user: "{{ userlist[3].username }}"
  file:
    path: "/home/{{ userlist[3].username }}/.sabnzbd/admin"
    state: directory
    mode: 0700

- name: restore sabnzbd.ini
  remote_user: "{{ userlist[3].username }}"
  command: "cp /nas/backup/sabnzdb/sabnzbd.ini /home/{{ userlist[3].username }}/.sabnzbd/sabnzbd.ini"
  when:
  - not sab.stat.exists

- name: restore rss_data.sab
  remote_user: "{{ userlist[3].username }}"
  command: "cp /nas/backup/sabnzdb/rss_data.sab /home/{{ userlist[3].username }}/.sabnzbd/admin/rss_data.sab"
  when:
  - not sab.stat.exists

- name: "Installing required software for sabnzdb+"
  become: true
  apt: pkg={{ item }} state=installed
  with_items:
  - sabnzbdplus
  - sabnzbdplus-theme-mobile
  register: aptinstall

- name: Modify /etc/default/sabnzbdplus -  USER=
  become: true
  lineinfile:
    path: /etc/default/sabnzbdplus
    regexp: '^USER='
    line: "USER={{ userlist[3]['username'] }}"

- name: Modify /etc/default/sabnzbdplus -   HOST=
  become: true
  lineinfile:
    path: /etc/default/sabnzbdplus
    regexp: '^HOST='
    line: 'HOST=0.0.0.0'

- name: Modify /etc/default/sabnzbdplus -  PORT=
  become: true
  lineinfile:
    path: /etc/default/sabnzbdplus
    regexp: '^PORT='
    line: 'PORT=8080'

- name: Rebooting
  become: true
  shell: "/bin/sleep 5 && shutdown -r now 'Ansible updates triggered'"
  async: 1
  poll: 0
  when: aptinstall.changed

- name: pause for 25 seconds
  pause:
    seconds: 25
  when: aptinstall.changed

- name: waiting for server to come back
  become: no
  local_action: wait_for host="{{ inventory_hostname }}" search_regex=OpenSSH port=22 timeout=300
  when: aptinstall.changed

- name: git sab-backup-restore
  become: false
  remote_user: "{{ userlist[3].username }}"
  git:
    repo: "git@bitbucket.org:energyvault462/sab-backup-restore.git"
    dest: "/home/{{ userlist[3].username }}/sab-backup-restore"
    key_file: "/home/{{ userlist[3].username }}/.ssh/id_rsa"
    accept_hostkey: true

- name: Create logs folder
  become: true
  file: 
    path: "/home/{{ userlist[3].username }}/logs"
    owner: "{{ userlist[3].username }}" 
    group: "{{ userlist[3].username }}"
    mode: 0744
    state: directory

- name: "add sab backup script to cron job"
  become: true
  cron:
    name: backup-sabnzbd
    minute: "0"
    hour: "3"
    job: "/home/{{ userlist[3].username }}/sab-backup-restore/backup.sh > /home/{{ userlist[3].username }}/logs/sab-backup.txt"
    user: "root"
