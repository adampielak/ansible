---
- name: "Installing required software"
  become: true
  apt: pkg={{ item }} state=installed
  with_items:
  - nfs-common

- name: "Mount Media"
  become: true
  mount:
    path: /nas/media
    src: 192.168.13.11:/datapool/media/Video
    fstype: nfs
    opts: soft,intr,rsize=8192,wsize=8192
    state: mounted

- name: "Mount backup"
  become: true
  mount:
    path: /nas/backup
    src: 192.168.13.11:/datapool/backup/cp/usb/plex-backup
    fstype: nfs
    opts: soft,intr,rsize=8192,wsize=8192
    state: mounted

- name: git download the plex backup script
  become: false
  remote_user: "{{ userlist[3]['username'] }}"
  git:
    repo: "{{ item.repoSrc }}"
    dest: "{{ item.repoDest }}"
    key_file: "{{ userlist[3]['username'] }}/.ssh/id_rsa"
    accept_hostkey: true
  with_items:
  - {repoSrc: "git@bitbucket.org:energyvault462/backup-plex.git", repoDest: "/home/{{ userlist[3]['username'] }}/backup-plex"}

- name: "add backup script to cron job"
  become: true
  cron:
    name: backup-plex
    minute: "0"
    hour: "3"
    job: "/home/{{ userlist[3].username }}/backup-plex/backup-plex.sh"
    user: "root"

- name: Check if plex is already installed
  become: yes
  stat: path="/var/lib/plexmediaserver/Library/Application Support/Plex Media Server/Preferences.xml"
  register: p

- name: Download plex deb
  become: yes
  become_user: "{{ userlist[3].username }}"
  get_url:
    url: "{{ plexurl }}" 
    dest: "{{ plextarget }}"

- name: Install plex
  become: true
  apt: deb="{{ plextarget }}"

- name: Restore files manually from a backup.
  debug:
    msg: "login to server and run: backup-plex/restore-plex.sh"

